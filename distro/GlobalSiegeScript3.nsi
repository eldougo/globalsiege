; Script generated by the HM NIS Edit Script Wizard.
; Modified for GlobalSiege 22 Jan 2011 Doug Burner.
;
; Macro "CheckAdminLevel" is used during install and uninstall
; to check if the user has admin rights.
;
; 23/01/2011
; Added the plugin FindProcDLL.dll from
; http://nsis.sourceforge.net/FindProcDLL_plug-in
; as suggested by Lars Monsees 23/01/2011.
; This plugin is used by the macro "CheckAppRunning"
; to bail out of the app install and uninstall if
; the app is running. Copy into the NSIS plugin directory
; C:\Program Files\NSIS\Plugins
;
;---------------------------------------------------------------------

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "GlobalSiege"
!define PRODUCT_VERSION "0.9.03.15"
!define PRODUCT_APP_EXE "${PRODUCT_NAME}.exe"
!define PRODUCT_PUBLISHER "Doug Burner"
!define PRODUCT_WEB_SITE "http://www.globalsiege.net"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\GlobalSiege.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PRODUCT_STARTMENU_REGVAL "NSIS:StartMenuDir"


SetCompressor /FINAL /SOLID lzma
SetCompressorDictSize 64

; Check if the application is running.
!macro CheckAppRunning PROCESSNAME
    FindProcDLL::FindProc ${PROCESSNAME}
    StrCmp $R0 "1" 0 ok
    DetailPrint "Cannot proceed because $(^Name) is running."
    Abort 
    ok:
!macroend

; Check user has admin rights.
!macro CheckAdminLevel 
    ClearErrors
    UserInfo::GetName
    IfErrors UserInfo_Win98
    Pop $0
    UserInfo::GetAccountType
    Pop $1
    StrCmp $1 "Admin" 0 +2
        Goto UserInfo_ok
    StrCmp $1 "Power" 0 +2
        Goto UserInfo_ok

    # User doesn´t have necessary privileges
    DetailPrint "Cannot proceed because admin privileges required."
    Abort 
    UserInfo_Win98:
        # do nothing, UserInfo not supported
    UserInfo_ok:
        # continue
!macroend

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install-blue.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall-blue.ico"

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

; Welcome page
!insertmacro MUI_PAGE_WELCOME

; License page displays language dependent license file.
!define MUI_LICENSEPAGE_RADIOBUTTONS
!insertmacro MUI_PAGE_LICENSE "$(MUILicense)"

; Components page
!insertmacro MUI_PAGE_COMPONENTS

; Directory page
!insertmacro MUI_PAGE_DIRECTORY

; Start menu page
var ICONS_GROUP
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "${PRODUCT_NAME}"
!define MUI_STARTMENUPAGE_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${PRODUCT_STARTMENU_REGVAL}"
!insertmacro MUI_PAGE_STARTMENU Application $ICONS_GROUP

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES

; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\${PRODUCT_APP_EXE}"
!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\Readme.txt"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "Danish"
!insertmacro MUI_LANGUAGE "Dutch"
!insertmacro MUI_LANGUAGE "French"
!insertmacro MUI_LANGUAGE "German"
!insertmacro MUI_LANGUAGE "Italian"
!insertmacro MUI_LANGUAGE "Norwegian"
;!insertmacro MUI_LANGUAGE "Russian"                   ;String type
!insertmacro MUI_LANGUAGE "Spanish"
!insertmacro MUI_LANGUAGE "Swedish"

; License files for each language.
LicenseLangString MUILicense ${LANG_ENGLISH} "License\License.eng.txt"
LicenseLangString MUILicense ${LANG_DANISH} "License\License.dan.txt"
LicenseLangString MUILicense ${LANG_DUTCH} "License\License.dut.txt"
LicenseLangString MUILicense ${LANG_FRENCH} "License\License.fra.txt"
LicenseLangString MUILicense ${LANG_GERMAN} "License\License.ger.txt"
LicenseLangString MUILicense ${LANG_ITALIAN} "License\License.ita.txt"
LicenseLangString MUILicense ${LANG_NORWEGIAN} "License\License.nor.txt"
LicenseLangString MUILicense ${LANG_SPANISH} "License\License.spa.txt"
LicenseLangString MUILicense ${LANG_SWEDISH} "License\License.swe.txt"

/*
Microsoft language translations.
    <Language Name> = &H<Language ID>
    English = &H409
    French = &H40C
    Spanish = &HC0A
    Italian = &H410
    Swedish = &H41D
    Dutch = &H413
    Brazilian = &H416
    Finnish = &H40B
    Norwegian = &H414
    Danish = &H406
    Hungarian = &H40E
    Polish = &H415
    Russian = &H419
    Czech = &H405
    Greek = &H408
    Portuguese = &H816
    Turkish = &H41F
    Japanese = &H411
    Korean = &H412
    German = &H407
    Chinese_Simplified = &H804
    Chinese_Traditional = &H404
    Arabic = &H401
    Hebrew = &H40D
*/

; MUI end ------

Name "${PRODUCT_NAME}"                                 ;"GlobalSiege"
OutFile "${PRODUCT_NAME}-${PRODUCT_VERSION}.exe"       ;"GlobalSiege-0.0.00.00.exe"
BrandingText "${PRODUCT_NAME} v${PRODUCT_VERSION}"     ;"GlobalSiege v0.0.00.00"
VIProductVersion "${PRODUCT_VERSION}"                  ;"0.0.00.00"

; File version info as displayed when right-clicked.
VIAddVersionKey "ProductName" "GlobalSiege"
VIAddVersionKey "Comments" "GlobalSiege"
VIAddVersionKey "CompanyName" "GlobalSiege.net"
VIAddVersionKey "LegalTrademarks" "GlobalSiege"
VIAddVersionKey "LegalCopyright" "© 2014 Doug Burner"
VIAddVersionKey "FileDescription" "GlobalSiege"
VIAddVersionKey "FileVersion" "${PRODUCT_VERSION}"

; Application installation directory, usually "C:\Program Files\Globalsiege\".
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"

; Need admin rights to install DLL files in the Windows System directory.
RequestExecutionLevel admin

; Check file integrity before install.
CRCCheck on
!include Library.nsh

InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Var ALREADY_INSTALLED
Var Version

; Get language selection and set in the GlobalSiege section of the registry.
Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY
  WriteRegStr HKCU "Software\VB and VBA Program Settings\GlobalSiege\settings" "Lang" "$LANGUAGE"
FunctionEnd

; Copy files into the application's new home, usually "C:\Program Files\GlobalSiege\"
; and copy application DLL files into the Windows System directory.
Section "GlobalSiege" SEC01
  SectionIn 1 RO
  
  !insertmacro CheckAdminLevel
  !insertmacro CheckAppRunning ${PRODUCT_APP_EXE}

  ; If this registry entry does not exist, this is a new installation.
  ; I have no idea how this gets generated.
  ReadRegDWord $Version HKLM "Software\VBGenerator\${PRODUCT_NAME}" Version
  IfErrors new_installation
  StrCpy $ALREADY_INSTALLED 1
  new_installation:

  ; Application files to the "Program File" directory.
  SetOverwrite on
  SetOutPath "$InstDir"
  File /a "App\*"
  WriteUninstaller "$InstDir\uninstaller.exe"
  
  ; Application support files to the Windows Sys directory.
  SetOverwrite ifnewer
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\msstdfmt.dll" "$SysDir\msstdfmt.dll" "$SysDir"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\ComDlg32.OCX" "$SysDir\ComDlg32.OCX" "$SysDir"
  !insertmacro InstallLib DLL NOTSHARED REBOOT_PROTECTED "Sys\RICHED32.DLL" "$SysDir\RICHED32.DLL" "$SysDir"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\richtx32.Ocx" "$SysDir\richtx32.Ocx" "$SysDir"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\mscomctl.OCX" "$SysDir\mscomctl.OCX" "$SysDir"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\MSINET.Ocx" "$SysDir\MSINET.Ocx" "$SysDir"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\MSWINSCK.ocx" "$SysDir\MSWINSCK.ocx" "$SysDir"
  !insertmacro InstallLib DLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\ws2_32.dll" "$SysDir\ws2_32.dll" "$SysDir"

  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED "Sys\gsleutls.dll" "$SysDir\gsleutls.dll" "$SysDir"

  ; Add uninstaller information to registry.
  WriteRegDWord HKLM "Software\VBGenerator\uninstaller.exe" "Version" 1
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\GlobalSiege" "DisplayName" "GlobalSiege"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\GlobalSiege" "UninstallString" '"$InstDir\uninstaller.exe"'
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\GlobalSiege" "NoModify" 1
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\GlobalSiege" "NoRepair" 1
SectionEnd

; Create start menu and links.
Section "Add Start Menu group" SEC02
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"

  ; Add main application link.
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\GlobalSiege.lnk" "$INSTDIR\GlobalSiege.exe"

  ; Create the web link and copy it to the program group in the start menu. It does
  ; not seem to work if it is created directly in the start menu for some unknow reason.
  WriteIniStr "$INSTDIR\${PRODUCT_NAME} Website.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  copyfiles "$INSTDIR\${PRODUCT_NAME} Website.url" "$SMPROGRAMS\$ICONS_GROUP"
  
  ;Add uninstall link.
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk" "$INSTDIR\uninstaller.exe"
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

; Create desktop icon.
Section "Add Desktop icon" SEC03
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateShortCut "$DESKTOP\GlobalSiege.lnk" "$INSTDIR\GlobalSiege.exe"
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

; Create quicklaunch icon. "/o" means that it defaults to unselected.
;Section /o "Add Quick Launch icon" SEC04
;  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
;  CreateShortCut "$QUICKLAUNCH\GlobalSiege.lnk" "$INSTDIR\GlobalSiege.exe"
;  !insertmacro MUI_STARTMENU_WRITE_END
;SectionEnd

; "-" makes this section executed regardless and not an option.
Section -Post
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\GlobalSiege.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\GlobalSiege.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

; Section descriptions displayed in the right pannel of the components selection box.
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} "Install ${PRODUCT_NAME} application files."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} "Add a new program group to your start menu."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC03} "Add a ${PRODUCT_NAME} icon to your Desktop."
;  !insertmacro MUI_DESCRIPTION_TEXT ${SEC04} "Add a ${PRODUCT_NAME} icon to your Quick Launch bar."
!insertmacro MUI_FUNCTION_DESCRIPTION_END

; Called before anything dialog box is displayed. Ask the user for 
; a language and save in the GlobalSiege section of the registry.
Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

; Called during un-install before any other dialog box. Ask user for un-install configmration.
Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 \
             "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

; Un-install steps.
Section Uninstall
  !insertmacro CheckAdminLevel
  !insertmacro CheckAppRunning ${PRODUCT_APP_EXE}
  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $ICONS_GROUP
  Delete "$INSTDIR\${PRODUCT_NAME} Website.url"
  Delete "$INSTDIR\uninst.exe"
  
  ; Remove shortcuts.
  Delete "$QUICKLAUNCH\GlobalSiege.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\${PRODUCT_NAME} Website.url"
  Delete "$DESKTOP\GlobalSiege.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\GlobalSiege.lnk"

  ; Unreg and uninstall the program.
  UnRegDLL "$InstDir\GlobalSiege.exe"
  Delete /RebootOk "$InstDir\GlobalSiege.exe"
  Delete /RebootOk "$InstDir\uninstaller.exe"

  ;Remove the application DLLs.
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\ws2_32.dll"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\MSWINSCK.ocx"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\MSINET.Ocx"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\mscomctl.OCX"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\richtx32.Ocx"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\RICHED32.DLL"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\ComDlg32.OCX"
  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\msstdfmt.dll"

  !insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED "$SysDir\gsleutls.dll"

  ; Remove the application support files.
  ; Could use "Delete /RebootOk "$InstDir\*"" but we do not
  ; know if there are other files in the app directory on the
  ; end-user's machine. People have been known to install all
  ; games in one directory. One person had infact installed
  ; the former MissionRisk directly on their root drive.
  Delete /RebootOk "$InstDir\License.txt"
  Delete /RebootOk "$InstDir\Default War.mrk"
  Delete /RebootOk "$InstDir\ding.wav"
  Delete /RebootOk "$InstDir\Divide and Conquer.mrk"
  Delete /RebootOk "$InstDir\Choises.mrk"
  Delete /RebootOk "$InstDir\The Alamo.mrk"
  Delete /RebootOk "$InstDir\squelch0.wav"
  Delete /RebootOk "$InstDir\squelch1.wav"
  Delete /RebootOk "$InstDir\squelch2.wav"
  Delete /RebootOk "$InstDir\squelch3.wav"
  Delete /RebootOk "$InstDir\Status Quo.mrk"
  Delete /RebootOk "$InstDir\Readme.txt"

  RMDir /r /RebootOk "$SMPrograms\GlobalSiege"
  DeleteRegKey HKLM "Software\VBGenerator\GlobalSiege"
  RmDir /RebootOk "$INSTDIR"

  ; Remove start menu group and application directory.
  RMDir "$SMPROGRAMS\$ICONS_GROUP"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

; Install the VB6SP6 runtime DLL files. "-" means that this section
; will be run regardless during the install.
Section "-Install VB6 runtimes"
  ;Add code here that sets $ALREADY_INSTALLED to a non-zero value if"
  ;the application is already installed. For example:

  IfFileExists "$INSTDIR\uninst.exe" 0 new_installation2
  StrCpy $ALREADY_INSTALLED 1
  new_installation2:

  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_NOTPROTECTED \
    "Sys\msvbvm60.dll" "$SYSDIR\msvbvm60.dll" "$SYSDIR"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED \
    "Sys\oleaut32.dll" "$SYSDIR\oleaut32.dll" "$SYSDIR"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED \
    "Sys\olepro32.dll" "$SYSDIR\olepro32.dll" "$SYSDIR"
  !insertmacro InstallLib REGDLL $ALREADY_INSTALLED REBOOT_PROTECTED \
    "Sys\comcat.dll"   "$SYSDIR\comcat.dll"   "$SYSDIR"
  !insertmacro InstallLib DLL    $ALREADY_INSTALLED REBOOT_PROTECTED \
    "Sys\asycfilt.dll" "$SYSDIR\asycfilt.dll" "$SYSDIR"
  !insertmacro InstallLib TLB    $ALREADY_INSTALLED REBOOT_PROTECTED \
    "Sys\stdole2.tlb"  "$SYSDIR\stdole2.tlb"  "$SYSDIR"
SectionEnd

; Run during the un-install phase. These are the shared VB6SP6 runtime libraries
; and are not actually removed.
Section "-un.Uninstall VB6 runtimes"
  !insertmacro UnInstallLib REGDLL SHARED NOREMOVE "$SYSDIR\msvbvm60.dll"
  !insertmacro UnInstallLib REGDLL SHARED NOREMOVE "$SYSDIR\oleaut32.dll"
  !insertmacro UnInstallLib REGDLL SHARED NOREMOVE "$SYSDIR\olepro32.dll"
  !insertmacro UnInstallLib REGDLL SHARED NOREMOVE "$SYSDIR\comcat.dll"
  !insertmacro UnInstallLib DLL    SHARED NOREMOVE "$SYSDIR\asycfilt.dll"
  !insertmacro UnInstallLib TLB    SHARED NOREMOVE "$SYSDIR\stdole2.tlb"
SectionEnd